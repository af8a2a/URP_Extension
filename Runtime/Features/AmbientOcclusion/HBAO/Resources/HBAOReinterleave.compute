#include "Packages/com.unity.render-pipelines.universal/ShaderLibrary/Core.hlsl"
// #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GlobalSamplers.hlsl"
#pragma kernel KMain

Texture2DArray<float2> AOInput;
RWTexture2D<float2> DepthOutput;


float2 Prepare_Load(int2 coord, int slice)
{
    return AOInput[int3(coord, slice)];
}

void Prepare_Store(int2 coord, float2 AOWithDepth)
{
    DepthOutput[coord] = AOWithDepth;
}


static int2 InterleavePattern[] = {
    int2(0, 0),
    int2(0, 1),
    int2(1, 0),
    int2(1, 1),
    int2(2, 0),
    int2(2, 1),
    int2(3, 0),
    int2(3, 1),
    int2(0, 2),
    int2(1, 2),
    int2(0, 3),
    int2(1, 3),
    int2(2, 2),
    int2(2, 2),
    int2(3, 3),
    int2(3, 3),
};

[numthreads(8, 8, 1)]
void KMain(uint3 tid : SV_DispatchThreadID)
{
    int2 baseCoord = tid;
    int2 upscaledCoord = 4 * tid;
    Prepare_Store(upscaledCoord + int2(0, 0), Prepare_Load(baseCoord, 0));
    Prepare_Store(upscaledCoord + int2(0, 1), Prepare_Load(baseCoord, 1));
    Prepare_Store(upscaledCoord + int2(1, 0), Prepare_Load(baseCoord, 2));
    Prepare_Store(upscaledCoord + int2(1, 1), Prepare_Load(baseCoord, 3));

    Prepare_Store(upscaledCoord + int2(2, 0), Prepare_Load(baseCoord, 4));
    Prepare_Store(upscaledCoord + int2(2, 1), Prepare_Load(baseCoord, 5));
    Prepare_Store(upscaledCoord + int2(3, 0), Prepare_Load(baseCoord, 6));
    Prepare_Store(upscaledCoord + int2(3, 1), Prepare_Load(baseCoord, 7));

    Prepare_Store(upscaledCoord + int2(0, 2), Prepare_Load(baseCoord, 8));
    Prepare_Store(upscaledCoord + int2(0, 3), Prepare_Load(baseCoord, 9));
    Prepare_Store(upscaledCoord + int2(1, 2), Prepare_Load(baseCoord, 10));
    Prepare_Store(upscaledCoord + int2(1, 3), Prepare_Load(baseCoord, 11));

    Prepare_Store(upscaledCoord + int2(2, 2), Prepare_Load(baseCoord, 12));
    Prepare_Store(upscaledCoord + int2(2, 3), Prepare_Load(baseCoord, 13));
    Prepare_Store(upscaledCoord + int2(3, 2), Prepare_Load(baseCoord, 14));
    Prepare_Store(upscaledCoord + int2(3, 3), Prepare_Load(baseCoord, 15));
}
